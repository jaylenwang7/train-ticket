{{- $root := . }}
{{- range $name, $svc := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}
  labels:
    app: {{ $svc.name }}
spec:
  selector:
    matchLabels:
      app: {{ $svc.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.name }}
    spec:
      containers:
      - name: {{ $svc.name }}
        image: "{{ $root.Values.global.dockerRegistry }}{{ if $root.Values.global.dockerRegistry }}/{{ end }}{{ $root.Values.global.repository }}/{{ $svc.name }}:{{ $root.Values.global.defaultImageVersion }}"
        {{- with $root.Values.global.pullPolicy }}
        imagePullPolicy: {{ . }}{{- end}}
        envFrom:
        - secretRef:
            name: {{ $svc.secretRef | quote}}
        {{- if ne $svc.name "ts-ticket-office-service" }}
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 1
          failureThreshold: 30
          timeoutSeconds: 2
        {{- end }}
      {{- with $root.Values.global.monitoring}}
      {{- if eq $svc.lang "python"}} # python auto instrument
        env:
          - name: OTEL_TRACES_EXPORTER
            value: console,otlp
          - name: OTEL_METRICS_EXPORTER
            value: console,otlp
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: opentelemetry-collector-deployment:4317
      {{- end}}
      {{- if eq $svc.lang "javascript"}}
        env:
          - name: OTEL_TRACES_EXPORTER
            value: console,otlp
          - name: OTEL_METRICS_EXPORTER
            value: console,otlp
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: opentelemetry-collector-deployment:4317
          - name: OTEL_NODE_RESOURCE_DETECTORS
            value: "env,host,os"
          - name: NODE_OPTIONS
            value: "--require @opentelemetry/auto-instrumentations-node/register"
      {{- end}}
      {{- if not $svc.lang}} #if no language is set, default to java
      {{- if eq $root.Values.global.monitoring "skywalking"}}
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            value: "{{ $root.Release.Name }}-skywalking-helm-oap:11800"
          - name: SW_GRPC_LOG_SERVER_HOST
            value: "{{ $root.Release.Name }}-skywalking-helm-oap"
          - name: SW_GRPC_LOG_SERVER_PORT
            value: "11800"
          - name: SW_AGENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
      {{- end}}
      {{- if eq $root.Values.global.monitoring "opentelemetry"}}
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name={{ $svc.name }}"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://opentelemetry-collector-deployment:4317"
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: "http://opentelemetry-collector-deployment:4317"
          - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
            value: "http://opentelemetry-collector-deployment:4317"
          - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
            value: "http://opentelemetry-collector-deployment:4317"
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: grpc
          - name: OTEL_METRICS_EXPORTER
            value: otlp
          - name: OTEL_TRACES_EXPORTER
            value: otlp
          - name: OTEL_LOGS_EXPORTER
            value: otlp
      {{- end}} 
      {{- end}}
      {{- end}}
---
{{- end}}