{{- $root := . }}
{{- range $name, $svc := .Values.services }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}
  labels:
    app: {{ $svc.name }}
spec:
  selector:
    matchLabels:
      app: {{ $svc.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.name }}
    spec:
      containers:
      - name: {{ $svc.name }}
        image: "{{ $root.Values.global.dockerRegistry }}{{ if $root.Values.global.dockerRegistry }}/{{ end }}{{ $root.Values.global.repository }}/{{ $svc.name }}:{{ $root.Values.global.defaultImageVersion }}"
        {{- with $root.Values.global.pullPolicy }}
        imagePullPolicy: {{ . }}{{- end}}
        envFrom:
        - secretRef:
            name: {{ $svc.secretRef | quote}}
        {{- if ne $svc.name "ts-ticket-office-service" }}
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 1
          failureThreshold: 30
          timeoutSeconds: 2
        {{- end }}
        env:
        {{- with $root.Values.global.monitoring}}
        {{- if eq . "jaeger"}}
          - name: JAEGER_AGENT_HOST
            value: {{ $root.Values.jaeger.agentHost | default "jaeger" }}
          - name: JAEGER_AGENT_PORT
            value: {{ $root.Values.jaeger.agentPort | default "6831" | quote }}
          - name: JAEGER_SERVICE_NAME
            value: {{ $svc.name }}
          - name: JAEGER_SAMPLER_TYPE
            value: {{ $root.Values.jaeger.samplerType | default "const" }}
          - name: JAEGER_SAMPLER_PARAM
            value: {{ $root.Values.jaeger.samplerParam | default "1" | quote }}
        {{- end}}
        {{- end}}
        {{- if eq $root.Values.global.monitoring "skywalking" }}{{- if not $svc.lang}}
        volumeMounts:
          - name: skywalking-agent
            mountPath: /skywalking-agent
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
            value: "{{ $root.Release.Name }}-skywalking-helm-oap:11800"
          - name: SW_GRPC_LOG_SERVER_HOST
            value: "{{ $root.Release.Name }}-skywalking-helm-oap"
          - name: SW_GRPC_LOG_SERVER_PORT
            value: "11800"
          - name: SW_AGENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app']
          - name: JAVA_TOOL_OPTIONS
            value: "-javaagent:/skywalking-agent/skywalking-agent.jar"
      volumes:
        - name: skywalking-agent
          emptyDir: {}
      initContainers:
      - name: init-skywalking-agent
        image: {{ $root.Values.skywalking.image }}
        command: ['sh', '-c', 'cp -r /skywalking/agent/* /skywalking-agent/']
        volumeMounts:
        - name: skywalking-agent
          mountPath: /skywalking-agent
      {{- end}}
      {{- end}}
---
{{- end}}